// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id        String   @id @default(uuid())
  emp_name  String
  emp_email String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(Employee)

  Notice Notice[]

  Employee_Team Employee_Team[]
}

model Notice {
  id          String   @id @default(uuid())
  notice_body String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  issuer_id String
  Employee  Employee @relation(fields: [issuer_id], references: [id], onDelete: Cascade)

  category_id String
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  Notice_Team Notice_Team[]

  @@unique([id, issuer_id])
}

model Category {
  id       String   @id @default(uuid())
  category String   @unique
  notice   Notice[]
}

model Team {
  id            String          @id @default(uuid())
  group_name    String          @unique
  Employee_Team Employee_Team[]
  Notice_Team   Notice_Team[]
}

model Employee_Team {
  // emp_grp_id Int @id @default(autoincrement())
  emp_id   String
  group_id String

  Employee Employee @relation(fields: [emp_id], references: [id], onDelete: Cascade)
  Team     Team     @relation(fields: [group_id], references: [id], onDelete: Cascade)

  @@unique([emp_id, group_id])
}

// model Employee_Notices {
//   emp_notice_id Int @id @default(autoincrement())
//   emp_id        Int
//   notice_id     Int

//   Employee Employee @relation(fields: [emp_id], references: [emp_id])
//   Notices  Notices  @relation(fields: [notice_id], references: [notice_id])
// }

model Notice_Team {
  id        String @id @default(uuid())
  notice_id String
  group_id  String

  Notice Notice @relation(fields: [notice_id], references: [id], onDelete: Cascade)
  Team   Team   @relation(fields: [group_id], references: [id], onDelete: Cascade)

  @@unique([notice_id, group_id])
}

enum Role {
  Employee
  HR
  VP
  CEO
}
